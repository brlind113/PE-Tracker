<!DOCTYPE html>
<html lang="en">
<head>
  <title>PE Tracker</title>
  <meta charset="UTF-8">
  </head>
  <body>
    <style>
      body {
      background-color: #E2D2B0;
      }
      h1 {
      background-color: #D2B48C;
      padding-top: 15px;
      height: 50px;
      text-align: center;
      }
      nav {
      padding-top: 8px;
      font-weight: bold;
      display: block;
      width: 250px;
      height: fit-content;
      background-color: #D2B48C;
      }
      button {
      margin-top: 15px;
      width: 200px;
      height: 25px;
      margin-left: 25px;
      }
      </style>
 <h1>UW-La Crosse PE Tracker</h1>   
 <nav>

    <% tasks.forEach(function(r) {%>
      
     <button id='<%= r.id %>'
        onClick= startTimeCounter();><%= r.name %>
        <span id="minutes">00</span>:<span id="seconds">00</span>
      <%
 ;%>

</button>
    <% }); %>

    <button id=submit style="background-color: lightgreen;"
  onClick= 'javascript:logTask(submit);'>Submit\Save

</button><% ; %>
     </nav>
    <script>

var startTime = Math.floor(Date.now() / 1000); //Get the starting time (right now) in seconds
localStorage.setItem("startTime", startTime); // Store it if I want to restart the timer on the next page

function startTimeCounter() {
    var now = Math.floor(Date.now() / 1000); // get the time now
    var diff = now - startTime; // diff in seconds between now and start
    var m = Math.floor(diff / 60); // get minutes value (quotient of diff)
    var s = Math.floor(diff % 60); // get seconds value (remainder of diff)
    m = checkTime(m); // add a leading zero if it's single digit
    s = checkTime(s); // add a leading zero if it's single digit
    document.getElementById("seconds").innerHTML = m + ":" + s; // update the element where the timer will appear
    var t = setTimeout(startTimeCounter, 500); // set a timeout to update the timer
}

function checkTime(i) {
    if (i < 10) {i = "0" + i};  // add zero in front of numbers < 10
    return i;
}



  let currentTaskId = null;

  const logTask = async function(id) {
    const response = await fetch('/log', {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        users_id: -1,
        students_id: -1,
        tasks_id: id,
        duration: "'+00:00:01'"
      })
    });
      const result = await response.json();
      console.log(result);

      currentTaskId = id;
  };
    </script>

  </body>


</html>